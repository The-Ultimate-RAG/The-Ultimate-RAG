name: Sync to Hugging Face Hub

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  sync-to-hub:
    runs-on: ubuntu-latest
    environment: Integration test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Configure Git identity
        run: |
          git config --global user.name "Andrchest"
          git config --global user.email "andreipolevoi220@gmail.com"

      - name: Set up Git LFS
        run: |
          git lfs install
          git lfs track "*.jpeg" "*.jpg" "*.png" "*.gif" "*.pdf" "*.zip" "*.bin"
          git add .gitattributes
          git add .
          git commit -m "Add LFS tracking for binary files" || true

      - name: Create .env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          echo "SECRET_PEPPER=${{ secrets.SECRET_PEPPER }}" >> .env
          echo "JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }}" >> .env
          echo "HF1_URL=${{ secrets.HF1_URL }}" >> .env

      - name: Build Docker image
        run: docker build -t my-app .

      - name: Run Docker container
        run: docker run -d --name my-app-container -v $(pwd)/.env:/app/.env -p 7860:7860 my-app

      - name: Wait for app to be ready
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:7860/health | grep -q "ok"; then
              echo "App is ready!"
              break
            fi
            echo "Waiting for app..."
            sleep 10
          done

      - name: Install test dependencies inside container
        run: docker exec my-app-container pip install pytest pytest-cov

      - name: Run integration tests with coverage
        run: |
          docker exec -w /app my-app-container python -m pytest app/tests/integration/tests_draft.py -v --cov=app --cov-report=xml --cov-report=html

      - name: Copy coverage reports from container
        run: |
          docker cp my-app-container:/app/coverage.xml .
          docker cp my-app-container:/app/htmlcov .

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: integration-coverage-report
          path: |
            coverage.xml
            htmlcov/

      - name: Remove .env file
        run: rm .env

      - name: Push to HF2 if tests pass
        if: success()
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          git lfs install
          git lfs track "*.jpeg" "*.jpg" "*.png" "*.gif" "*.pdf" "*.zip" "*.bin"
          git add .gitattributes
          git add .
          git commit -m "Add LFS tracking for binary files" || true
          git checkout -b hf2-single-commit
          git reset --soft $(git rev-list --max-parents=0 HEAD)
          git commit -m "Single commit for HF2"
          git remote add hf2 https://Andrchest:$HF_TOKEN@huggingface.co/spaces/The-Ultimate-RAG-HF/The-Ultimate-RAG
          git push --force hf2 hf2-single-commit:main

      - name: Stop and remove Docker container
        if: always()
        run: |
          docker stop my-app-container
          docker rm my-app-container